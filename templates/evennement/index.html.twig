{% extends 'sidebar.html.twig' %}
{% block container %}
    {% block title %}{% endblock %}
{%  block the_navbar %}
    {% endblock %}

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="sha512-..." crossorigin="anonymous" />


    {% block body %}



        <div class="container-xxl flex-grow-1 container-p-y">
            <div class="row align-items-center">
                <div class="col-md-4 mb-4">
                    <input type="text" id="searchInput" placeholder="Search... " class="form-control">
                </div>

            </div>
        </div>





        <div class="upcoming-event-container">
              {% if upcomingEvent %}
                <div id="upcomingEvent">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title">Upcoming Event</h5>
                        </div>
                        <div class="card-body">
                            <h5>{{ upcomingEvent.nomEvent }}</h5>
                            <p>{{ upcomingEvent.date ? upcomingEvent.date|date('d M Y \\a\\t h:i A') : '' }}</p>
                            <!-- Add more details if needed -->
                        </div>
                    </div>
                </div>
            {% endif %}


        </div>


        <div class="event-container-xxl px-3 flex-grow-1 container-p-y">
            <div class="row row-cols-1 row-cols-md-2 row-cols-xl-3 g-4">
                {% for evennement in evennements %}
                    <div class=" events col">
                        <div class="card h-100">
                            <!-- Card content goes here -->
                            <div class="card-header flex-grow-0">
                                <div class="d-flex">
                                    <div class="avatar flex-shrink-0 me-3">
                                        <img src="../../assets/img/avatars/21.png" alt="User" class="rounded-circle">
                                    </div>
                                    <div class="d-flex w-100 flex-wrap align-items-center justify-content-between gap-1">
                                        <div class="me-2">
                                            <h5 class=" event-name mb-0">{{ evennement.nomEvent }}</h5>
                                            <small class="event-date">{{ evennement.date ? evennement.date|date('d M Y \\a\\t h:i A') : '' }}</small>
                                        </div>
                                        <div class="dropdown d-none d-sm-block">
                                            <button class="btn p-0" type="button" id="eventList" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <i class="bx bx-chevron-down"></i>
                                            </button>
                                            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="eventList">
                                                <a class="dropdown-item" href="javascript:void(0);">Last 28 Days</a>
                                                <a class="dropdown-item" href="javascript:void(0);">Last Month</a>
                                                <a class="dropdown-item" href="javascript:void(0);">Last Year</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <img class="img-fluid" src="../../assets/img/backgrounds/event.jpg" alt="Card image cap" />
                            <div class="featured-date mt-n4 ms-4 bg-white rounded w-px-50 shadow text-center p-1">
                                <h5 class="mb-0 text-dark">{{ evennement.date ? evennement.date|date('d') : '' }}</h5>
                                <span class="text-primary">{{ evennement.date ? evennement.date|date('M') : '' }}</span>
                            </div>
                            <div class="card-body">
                                <h5 class="event-adresse mb-0"> <i class="fas fa-map-marker-alt"></i> {{ evennement.adresse }}</h5>
                                <div class="d-flex gap-2">
{#                                    <span class="badge bg-label-primary">Technical</span>#}
{#                                    <span class="badge bg-label-primary">Account</span>#}
{#                                    <span class="badge bg-label-primary">Excel</span>#}
                                </div>
                                <div class="d-flex my-3">
                                    <div class="rating">
                                        {% for i in 1..5 %}
                                            {% if i <= evennement.rating %}
                                                <span><i class="fas fa-star"></i></span>
                                            {% else %}
                                                <span><i class="far fa-star"></i></span>
                                            {% endif %}
                                        {% endfor %}
                                    </div>


                                    <button class="btn-give-donation btn-primary ms-auto" data-event-id="{{ evennement.id }}">Give Donation</button> <!-- Add data-event-id attribute -->

                                </div>
                                <div class="d-flex align-items-center justify-content-between">
                                    <div class="card-actions">
                                        <div class="d-flex flex-wrap gap-4 "> <!-- Increased gap to 4 for more space -->
                                            <div class="d-flex align-items-center me-4">
                                                <div>
                                                    <p class="event-montant mb-0">{{ evennement.montant }}</p>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="dropup d-none d-sm-block">

                                        <div class="dropdown-menu dropdown-menu-end" aria-labelledby="sharedList">
                                            <a class="dropdown-item" href="javascript:void(0);">Last 28 Days</a>
                                            <a class="dropdown-item" href="javascript:void(0);">Last Month</a>
                                            <a class="dropdown-item" href="javascript:void(0);">Last Year</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div>


        <div class="event-container">


            <div class="event-list">
                {% for evennement in evennements %}
                    <div class="eventss">
                        <div class="event-header">
                            <h2>{{ evennement.nomEvent }}</h2>
                        </div>
                        <div class="event-details">
                            <div class="event-meta">
                                <span class="dates"><i class="fas fa-calendar-alt"></i> {{ evennement.date ? evennement.date|date('Y-m-d') : '' }}</span> <!-- Add Font Awesome icon -->
                                <span class="event-addresss"><strong>Adresse:</strong> {{ evennement.adresse }}</span>
                                <span class="event-montants"><strong>Montant:</strong> {{ evennement.montant }}</span>


                            </div>

                            <p><strong>Description:</strong> {{ evennement.description }}</p>
                            <div class="rating"><strong>Rating:</strong> {% for i in 1..evennement.rating %}<span>‚≠ê</span>{% endfor %}</div> <!-- Display stars based on rating -->
{#                            <div class="progress-container">#}
{#                                {{ render(controller('App\\Controller\\EvennementController::progressBar', {'evennement': evennement})) }}#}
{#                            </div>#}
                        </div>
                        <div class="event-actions">


                        </div>
                        <button class="btn-give-donation" data-event-id="{{ evennement.id }}">Give Donation</button> <!-- Add data-event-id attribute -->
                    </div>

                    <div id="donationModal{{ evennement.id }}" class="modal"> <!-- Append evennement.id to the id -->
                        <div class="modal-content">
                            <span class="close" onclick="closeDonationPopup({{ evennement.id }})">&times;</span> <!-- Pass evennement.id to the function -->
                            <h2>Give Donation</h2>
                            <p>Enter the donation amount:</p>
                            <form id="donationForm{{ evennement.id }}" action="{{ path('app_don_give_donation', {'id': evennement.id}) }}" method="POST">
                                <input type="number" name="montant" placeholder="Enter amount" required>
                                <button type="submit">Submit</button>
                            </form>

                        </div>
                    </div>




                {% else %}
                    <p class="no-records">No records found</p>
                {% endfor %}
            </div>

            <a href="{{ path('app_evennement_new') }}" class="create-new">Create new</a>
        </div>


        {% block css %}
            <link rel="stylesheet" href="../../assets/css/event.css" />
        {% endblock %}

        {% block js %}
            <script src="{{ asset('../../assets/js/event/event.js') }}"></script>

            <script src="{{ asset('../../assets/js/event/edit_event.js') }}"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchInput');
        const events = document.querySelectorAll('.event');

        // Function to perform search
        function performSearch() {
            const searchTerm = searchInput.value.trim().toLowerCase();

            // Loop through each event and check if any of its fields match the search term
            events.forEach(function(event) {
                const eventDetails = event.querySelector('.event-details');
                const eventMeta = eventDetails.querySelector('.event-meta').textContent.toLowerCase();
                const eventDescription = eventDetails.querySelector('p').textContent.toLowerCase();

                if (eventMeta.includes(searchTerm) || eventDescription.includes(searchTerm)) {
                    event.style.display = 'block'; // Show the event if any field matches
                } else {
                    event.style.display = 'none'; // Hide the event if none of the fields match
                }
            });
        }

        // Event listener for input change
        searchInput.addEventListener('input', performSearch);
    });


    //upcoming event
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchInput');
        const upcomingEventDiv = document.getElementById('upcomingEvent');

        // Function to find the upcoming event
        function findUpcomingEvent(events) {
            let upcomingEvent = null;
            let closestDate = Infinity;
            const today = new Date();

            // Loop through each event to find the one closest to today's date
            events.forEach(function(event) {
                const eventDateStr = event.querySelector('.event-date').textContent.trim();
                console.log("Event Date String:", eventDateStr); // Debugging message
                const eventDate = parseDate(eventDateStr); // Parse the date string
                console.log("Parsed Date:", eventDate); // Debugging message
                const timeDifference = eventDate.getTime() - today.getTime();
                console.log("Time Difference (ms):", timeDifference); // Debugging message

                // If the event is in the future and closer to today's date than the previous closest event
                if (timeDifference > 0 && timeDifference < closestDate) {
                    upcomingEvent = event;
                    closestDate = timeDifference;
                }
            });

            return upcomingEvent;
        }

// Function to parse date string into a Date object
        function parseDate(dateStr) {
            // Split the date string into its components
            const parts = dateStr.split(' ');
            const day = parseInt(parts[0], 10);
            const monthStr = parts[1];
            const year = parseInt(parts[2], 10);
            const timeParts = parts[5].split(':');
            let hour = parseInt(timeParts[0], 10);
            let minute = parseInt(timeParts[1], 10);

            // Adjust hour for PM
            if (parts[6] === 'PM') {
                hour += 12;
            }

            // Create and return the Date object
            return new Date(year, getMonthIndex(monthStr), day, hour, minute);
        }

// Function to get month index from month name abbreviation
        function getMonthIndex(monthStr) {
            const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
            return months.indexOf(monthStr);
        }

        // Function to display the upcoming event
        function displayUpcomingEvent(upcomingEvent) {
            if (upcomingEvent) {
                // Extract name, date, address, and amount from the upcoming event
                const eventName = upcomingEvent.querySelector('.event-name  ').textContent.trim();
                const eventDate = upcomingEvent.querySelector('.event-date').textContent.trim();
                const eventAddress = upcomingEvent.querySelector('.event-adresse ').textContent.trim();
                const eventAmount = upcomingEvent.querySelector('.event-montant ').textContent.trim();

                // Create HTML markup for the upcoming event
                const eventHTML = `
            <div class="upcoming-event" style="background-color: #ffffff; border-radius: 10px; padding: 20px; margin: 0 auto; max-width: 95%; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); margin-bottom: 20px">
    <h4 style="margin-top: 0;">${eventName}</h4>
    <p class="event-info" style="margin-top: 10px;"><strong>Date:</strong> ${eventDate} | <strong>Address:</strong> ${eventAddress} | <strong>Amount:</strong> ${eventAmount}</p>
</div>

            `;

                // Display the upcoming event
                upcomingEventDiv.innerHTML = eventHTML;
            } else {
                upcomingEventDiv.innerHTML = '<p>No upcoming events found</p>';
            }
        }

        // Event listener for input change
        searchInput.addEventListener('input', function() {
            // Hide upcoming event when searching
            upcomingEventDiv.innerHTML = '';
        });

        // Get all event nodes
        const events = document.querySelectorAll('.event');

        // Find and display the upcoming event
        const upcomingEvent = findUpcomingEvent(events);
        displayUpcomingEvent(upcomingEvent);
    }});



</script>


    <style>

        /* CSS for the modal content */
        .modal-content {
            background-color: #ffffff;
            padding: 20px;
            border-radius: 8px;
            width: 300px; /* Set width for the small window */
            height: 220px; /* Set height for the small window */
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Add shadow for depth */
        }

        /* Close button */
        .close {
            position: absolute;
            top: 10px;
            right: 10px;
            color: #aaa;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: #333;
            text-decoration: none;
            cursor: pointer;
        }

        .btn-give-donation{
            /* Existing styles */
            background-color: #6359dc;
            color: #fff;
            border: none;
            padding: 10px 10px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            /* New styles */
            display: block; /* Make buttons block-level elements */
            margin: 0 auto; /* Center horizontally */
        }

    </style>




        {% endblock %}

    {% endblock %}
{% endblock %}



